"Filed out from Dolphin Smalltalk 7"!

BBDataBaseXMLReader subclass: #OracleXMLReader
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OracleXMLReader guid: (GUID fromString: '{6a47a61d-764f-4f7d-b44c-f6dde2edab05}')!
OracleXMLReader comment: ''!
!OracleXMLReader categoriesForClass!Unclassified! !
!OracleXMLReader methodsFor!

createDataBaseStructure
	| rows |

	databaseModel := BBDataBaseModel new.
	rows := xmlDocument selectNodes: '//row'.

	rows do: [:each | self generateBasicStructureFrom: each in: databaseModel].

	rows do: [:each | self generatePrimaryKeyFrom: each in: databaseModel.].

	rows do: [:each | self generateForeignKeyFrom: each in: databaseModel].

	^databaseModel
!

generateBasicStructureFrom: anIXMLDOMElement in: aBBDataBaseModel
	| tableName table columnName column columnType type nullable |

	tableName := (anIXMLDOMElement selectSingleNode: 'TABLE_NAME') text.

	(aBBDataBaseModel includesTableNamed: tableName) 
	ifFalse: [table := BBDBTable newNamed: tableName. 
		aBBDataBaseModel addTable: table] 
	ifTrue:[table := aBBDataBaseModel getTableNamed: tableName.].

	columnName := (anIXMLDOMElement selectSingleNode: 'COLUMN_NAME') text.
	column := BBDBAttribute newNamed: columnName for: table.

	nullable := ((anIXMLDOMElement selectSingleNode: 'Nullable') text = 'Y'). "if the attribute is nullable we set it"
	column nullable: nullable.

	columnType := (anIXMLDOMElement selectSingleNode: 'Type') text.
	type := BBDBAttributeType type: columnType.
	column type: type.

	table addAttribute: column.
!

generateForeignKeyFrom: anIXMLDOMElement in: aBBDataBaseModel 
	| foreignKey foreignKeyName attributeName table foreignTable |

	(anIXMLDOMElement selectSingleNode: 'FK_Columns') text isEmpty ifTrue: [^self].

	table := aBBDataBaseModel getTableNamed: (anIXMLDOMElement selectSingleNode: 'TABLE_NAME') text.
	foreignTable := aBBDataBaseModel getTableNamed: (anIXMLDOMElement selectSingleNode: 'FK_Related_Table') text.
	foreignKeyName := (anIXMLDOMElement selectSingleNode: 'FK_Constraint_Name') text.
	foreignKey := BBDBForeignKey newNamed: foreignKeyName for: table.

	attributeName := (anIXMLDOMElement selectSingleNode: 'FK_Columns') text.

	(attributeName subStrings: ',') do: [:eachFKname | foreignKey addAttribute: (table getAttributeNamed: eachFKname trimBlanks)].

	foreignKey foreignAttribute: foreignTable primaryKey;
		relatedTable: foreignTable.
	table addForeignKey: foreignKey.

	^foreignKey

!

generatePrimaryKeyFrom: anIXMLDOMElement in: aBBDataBaseModel 
	| table pkColumns pkName pk |

	table := aBBDataBaseModel getTableNamed: (anIXMLDOMElement selectSingleNode: 'TABLE_NAME') text.
	pkColumns := anIXMLDOMElement selectSingleNode: 'PK_Columns'.
	pkColumns text isEmpty ifTrue: [^self].

	pkName := (anIXMLDOMElement selectSingleNode: 'PK_Constraint_Name') text.

	pk := BBDBPrimaryKey newNamed: pkName for: table.
	(pkColumns text subStrings: ',') do: [:each | | attribute |
		attribute := table getAttributeNamed: (each copyWithoutAll: ' ').
		pk addKey: attribute].

	table primaryKey: pk.
! !
!OracleXMLReader categoriesFor: #createDataBaseStructure!public! !
!OracleXMLReader categoriesFor: #generateBasicStructureFrom:in:!public! !
!OracleXMLReader categoriesFor: #generateForeignKeyFrom:in:!public! !
!OracleXMLReader categoriesFor: #generatePrimaryKeyFrom:in:!public! !

!OracleXMLReader class methodsFor!

icon
	"Generated from:
	self createIconMethodOfSize: 32@32 fromFile: 'oracle.png'.
	"
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 32 0 0 0 32 8 6 0 0 0 115 122 122 244 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 32 99 72 82 77 0 0 122 38 0 0 128 132 0 0 250 0 0 0 128 232 0 0 117 48 0 0 234 96 0 0 58 152 0 0 23 112 156 186 81 60 0 0 0 9 112 72 89 115 0 0 4 234 0 0 4 234 1 10 109 185 233 0 0 7 25 73 68 65 84 88 71 181 87 91 111 148 215 21 157 130 224 129 223 211 167 252 141 60 180 85 132 232 67 149 7 18 165 133 162 38 105 155 82 144 170 74 84 24 113 9 162 138 40 224 40 161 2 28 132 27 34 82 3 113 76 76 177 193 227 27 182 241 13 219 227 177 103 198 51 158 235 119 191 173 174 117 200 71 28 152 73 44 149 142 116 116 190 57 231 236 189 215 222 103 223 206 79 146 36 65 166 205 15 248 110 89 223 60 103 134 231 121 25 199 113 50 190 239 103 226 56 206 236 216 177 35 179 107 215 174 204 238 221 187 51 123 246 236 49 243 206 157 59 205 250 182 126 2 240 226 32 99 202 4 52 135 97 136 70 163 129 185 185 57 12 12 12 160 167 167 7 23 46 92 192 217 179 103 113 234 212 41 156 57 115 6 23 47 94 196 245 235 215 209 223 223 143 137 137 9 20 10 5 216 182 253 156 94 124 218 201 49 202 119 2 144 10 158 158 158 70 111 111 47 142 29 59 102 198 229 203 151 241 224 193 3 60 125 250 20 229 114 217 140 149 149 21 35 248 206 157 59 184 118 237 154 57 63 58 58 106 128 208 98 136 162 200 128 105 7 228 37 0 58 20 4 1 74 165 18 238 222 189 107 132 74 211 199 143 31 131 102 239 200 40 101 174 51 171 171 171 134 86 22 91 94 94 54 214 72 65 200 178 91 149 254 30 0 29 146 112 105 116 245 234 85 28 61 122 20 67 67 67 230 26 52 94 36 238 100 189 84 91 1 25 28 28 196 194 194 2 44 203 50 32 218 2 72 9 132 94 136 175 92 185 98 52 95 95 95 55 104 127 200 132 157 238 54 93 151 224 241 241 113 228 114 57 208 121 159 243 74 247 51 98 174 63 210 80 102 191 113 227 6 186 186 186 80 173 86 205 218 143 9 216 206 190 235 186 152 159 159 71 165 82 49 22 126 233 10 100 1 221 211 189 123 247 158 107 46 107 164 224 182 35 164 211 25 241 22 31 57 99 62 159 55 86 216 234 140 138 101 163 233 226 226 34 206 157 59 135 108 54 219 214 91 255 23 16 41 173 132 43 164 37 47 189 118 227 132 173 86 11 125 125 125 184 116 233 146 65 251 42 52 111 151 91 180 182 213 15 4 34 19 80 224 242 202 50 46 93 248 7 158 46 46 240 142 124 36 33 19 71 200 4 21 211 55 72 20 39 244 147 56 132 175 164 165 117 238 71 10 215 68 177 253 108 45 146 179 242 191 111 226 61 225 94 68 90 222 183 246 77 34 74 115 129 246 72 203 245 56 98 34 178 41 112 104 50 139 127 50 187 73 56 141 131 38 5 88 220 164 76 68 30 224 198 17 106 81 136 102 2 216 140 36 207 236 51 100 57 87 152 52 61 158 19 67 129 178 19 134 44 193 4 240 57 156 103 14 39 80 4 67 150 252 6 28 210 218 17 215 72 151 177 90 77 244 62 232 199 253 91 119 209 34 19 141 40 136 225 202 92 202 200 62 137 56 60 49 245 72 24 36 216 36 163 176 197 225 18 32 135 7 129 37 195 32 68 228 75 144 65 196 3 9 108 178 32 9 247 56 243 28 217 144 46 128 71 167 15 185 152 105 48 149 126 54 208 135 133 241 89 248 1 205 166 212 233 91 72 236 58 85 111 192 138 45 120 28 33 215 252 136 255 41 213 101 40 21 195 8 12 42 184 94 0 139 115 20 42 106 184 231 90 212 176 97 174 137 71 224 114 45 246 44 160 225 34 9 190 77 203 78 128 160 214 128 23 217 200 148 54 10 184 253 249 45 172 22 139 72 170 117 100 79 159 196 253 3 127 192 224 111 255 136 225 35 31 32 126 56 128 161 183 223 194 232 175 223 197 228 59 239 193 185 217 143 178 183 129 122 87 55 44 230 253 154 95 69 190 231 115 140 237 63 130 225 3 71 176 241 233 13 76 158 63 7 143 215 105 83 219 96 108 24 143 222 63 132 251 127 58 138 71 39 186 120 109 182 1 237 86 90 84 196 69 38 87 41 226 225 181 91 88 115 234 200 247 126 129 252 135 39 129 245 2 92 171 12 59 251 13 138 251 14 98 109 255 1 84 199 110 163 240 117 47 138 251 223 67 109 225 33 90 123 223 65 225 141 159 193 31 201 98 248 173 119 17 86 86 208 104 229 144 44 207 99 228 224 33 88 76 62 30 175 225 201 27 123 97 253 230 32 242 127 253 27 42 221 221 8 131 6 154 244 167 70 201 162 181 66 100 54 42 101 220 97 25 109 109 18 192 224 0 198 14 255 14 206 163 135 72 166 179 168 127 242 17 214 14 253 30 147 135 222 71 254 47 135 177 244 211 215 96 205 124 133 236 155 191 194 220 145 63 99 226 245 159 163 250 250 47 48 241 203 189 240 70 190 129 63 249 8 24 30 193 232 190 253 240 166 238 195 153 29 196 226 190 183 17 28 102 102 237 185 130 214 151 95 195 231 85 57 188 106 107 189 2 219 109 34 83 35 128 161 145 17 20 55 55 17 59 45 84 251 110 98 253 196 121 204 159 254 8 27 31 119 3 51 179 200 51 71 184 65 25 21 214 252 202 191 110 99 253 214 61 56 118 21 40 213 144 187 217 13 231 171 127 163 124 252 239 200 29 255 16 155 253 95 98 246 252 89 44 157 56 137 133 83 167 97 141 253 7 171 159 48 196 143 159 198 212 199 159 194 115 108 142 0 149 181 18 170 129 69 0 94 3 227 179 211 88 41 148 104 30 122 57 157 200 166 249 130 196 67 53 118 24 154 30 90 244 110 151 123 126 72 135 163 147 198 94 2 159 17 81 84 172 211 156 54 189 185 206 120 13 21 46 174 226 150 101 155 142 170 176 118 163 103 35 166 243 6 33 221 149 33 237 213 109 212 86 11 176 124 58 161 111 59 88 202 45 99 106 61 135 22 157 166 197 112 113 124 133 15 133 48 36 233 191 38 94 21 114 142 175 240 244 209 84 108 250 76 76 10 108 2 163 36 14 135 49 169 184 167 167 115 196 60 23 83 48 8 2 30 147 27 195 51 86 57 38 205 102 169 140 124 185 72 5 125 230 1 46 54 89 249 74 51 115 212 44 160 54 145 137 255 128 1 172 112 150 182 174 16 80 96 89 229 188 73 7 162 182 9 233 66 50 243 105 5 135 73 166 73 102 22 173 225 113 173 197 61 135 196 180 9 195 152 22 226 183 197 100 212 160 66 74 66 243 171 75 216 100 101 76 40 40 147 48 35 185 174 131 213 181 85 86 68 198 63 131 55 228 65 147 118 201 76 41 54 33 40 165 82 91 223 204 42 161 82 43 247 2 147 126 85 178 153 98 168 109 18 105 214 222 179 212 157 104 239 219 57 34 15 38 89 83 119 230 150 22 81 231 85 43 115 154 106 168 161 13 245 0 175 162 234 253 16 143 165 165 37 211 43 170 220 155 166 52 173 205 42 145 234 9 210 82 249 255 0 82 171 213 76 217 87 73 22 127 253 190 215 19 166 205 195 118 122 191 237 2 76 219 57 149 97 117 216 234 186 210 78 235 37 0 105 255 151 182 77 175 2 136 148 82 55 244 228 201 19 211 236 202 202 29 187 226 244 49 34 130 180 113 216 174 166 157 206 137 207 204 204 12 116 247 242 179 173 237 152 105 72 218 17 202 2 66 170 187 18 152 244 204 118 45 146 154 93 143 150 169 169 169 231 194 219 181 246 109 1 164 87 161 150 122 147 41 90 221 236 139 205 100 39 141 37 92 192 101 114 9 151 199 139 79 250 220 123 145 174 35 128 212 33 213 82 203 123 245 70 88 91 91 51 79 49 9 144 133 100 29 237 167 64 117 199 114 52 13 125 43 172 211 215 84 39 192 29 1 164 4 210 72 166 147 5 234 245 58 138 236 27 196 92 111 67 245 250 179 179 179 230 225 170 111 61 106 180 47 128 91 159 113 157 222 133 38 15 252 152 147 165 78 147 50 145 127 72 115 105 221 108 54 141 99 105 22 64 9 21 216 180 171 222 74 219 169 211 254 47 243 20 215 119 37 142 82 149 0 0 0 0 73 69 78 68 174 66 96 130]! !
!OracleXMLReader class categoriesFor: #icon!constants!public! !

