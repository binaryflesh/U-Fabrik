"Filed out from Dolphin Smalltalk 7"!

UMLObject subclass: #UMLBehaviorDescriptor
	instanceVariableNames: 'comments'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
UMLBehaviorDescriptor guid: (GUID fromString: '{2362a716-3090-4e40-8946-5db21b2df9d5}')!
UMLBehaviorDescriptor comment: ''!
!UMLBehaviorDescriptor categoriesForClass!Unclassified! !
!UMLBehaviorDescriptor methodsFor!

comments
	^comments!

comments: anObject
	comments := anObject!

getInitialClassObjectNames

	^self subclassResponsibility!

getNodeAt: index
	"The receiver answer anUMLSequence node at <index> order "

	^self subclassResponsibility!

getNodes

	^self subclassResponsibility!

hasArgumentNamed: aString 
	^self subclassResponsibility!

hasInstanceVariableSendingAddRemoveIn: anUMLClass 
	"It is forbidden to send #add: or #remove: to an instance variable, because it can break the UML Model, adding anObject of class A to a collection that holds objects of class B. This should be done by: self add: XXX. Where a Trait is activated an perform the add operation using the UML Model."

	^false!

hasReferenceTo: implementationName

	self subclassResponsibility!

hasShowHideMessage

	^false!

hasState

	^self subclassResponsibility!

initialize

	super initialize.

	comments := ''.
!

isTrait

	^false!

isVirtualMachineImplementation

	^false!

messages
	^OrderedCollection new!

messagesCollect: aMonadicValuable 
	"The receiver iterate over it's messages nodes and apply the Block <aMonadicValuable> with each node as parameter"

	self subclassResponsibility!

methodName

	^'Abstract Behaviour'!

nodes
	self subclassResponsibility!

notTrackableSelectors

	^#(#= #<= #>= #~=  #~~ #== #and: #or: #not #ifFalse: #ifFalse:ifTrue: #ifTrue: #ifTrue:ifFalse: #whileFalse #whileTrue #whileFalse: #whileTrue: #, #+ #* #- #/  #add: #addAll: #remove: #basicAdd: #basicRemove: #do: #select: #collect: #reject: #detect: #copyWithoutDuplicates #asSortedCollection #asSortedCollection: #asArray #allSatisfy: #anySatisfy: #includes: #identityIncludes: #yourself #isNil #notNil )!

printMessage
	^''! !
!UMLBehaviorDescriptor categoriesFor: #comments!accessing!private! !
!UMLBehaviorDescriptor categoriesFor: #comments:!accessing!private! !
!UMLBehaviorDescriptor categoriesFor: #getInitialClassObjectNames!public! !
!UMLBehaviorDescriptor categoriesFor: #getNodeAt:!public! !
!UMLBehaviorDescriptor categoriesFor: #getNodes!public! !
!UMLBehaviorDescriptor categoriesFor: #hasArgumentNamed:!public! !
!UMLBehaviorDescriptor categoriesFor: #hasInstanceVariableSendingAddRemoveIn:!public! !
!UMLBehaviorDescriptor categoriesFor: #hasReferenceTo:!public! !
!UMLBehaviorDescriptor categoriesFor: #hasShowHideMessage!public! !
!UMLBehaviorDescriptor categoriesFor: #hasState!public! !
!UMLBehaviorDescriptor categoriesFor: #initialize!public! !
!UMLBehaviorDescriptor categoriesFor: #isTrait!public! !
!UMLBehaviorDescriptor categoriesFor: #isVirtualMachineImplementation!public! !
!UMLBehaviorDescriptor categoriesFor: #messages!public! !
!UMLBehaviorDescriptor categoriesFor: #messagesCollect:!evaluating messages!public! !
!UMLBehaviorDescriptor categoriesFor: #methodName!public! !
!UMLBehaviorDescriptor categoriesFor: #nodes!public! !
!UMLBehaviorDescriptor categoriesFor: #notTrackableSelectors!public! !
!UMLBehaviorDescriptor categoriesFor: #printMessage!public! !

!UMLBehaviorDescriptor class methodsFor!

icon
	"Generated from:
	self createIconMethodOfSize: 32@32 fromFile: 'implementation.png'.
	"
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 32 0 0 0 32 8 6 0 0 0 115 122 122 244 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 32 99 72 82 77 0 0 122 38 0 0 128 132 0 0 250 0 0 0 128 232 0 0 117 48 0 0 234 96 0 0 58 152 0 0 23 112 156 186 81 60 0 0 0 9 112 72 89 115 0 0 9 215 0 0 9 215 1 177 110 23 183 0 0 11 27 73 68 65 84 88 71 149 87 9 84 20 87 22 237 198 37 33 198 73 226 72 140 137 227 73 52 198 81 99 162 2 131 251 134 43 17 119 16 21 35 130 178 41 155 11 34 130 8 178 131 182 172 2 2 13 52 189 210 13 205 14 130 236 139 34 162 130 40 226 202 142 224 2 162 162 81 185 243 170 36 38 153 196 97 166 206 185 167 234 116 253 250 247 254 251 222 127 255 53 151 243 231 139 43 147 201 84 106 107 59 84 135 14 85 85 85 81 81 25 198 229 190 86 125 249 178 239 99 21 21 168 246 245 113 135 245 245 245 13 3 222 252 157 203 229 124 246 6 156 81 92 14 70 112 185 220 81 67 6 15 26 193 29 52 104 148 10 151 251 89 111 111 239 205 198 134 187 158 177 177 188 116 162 120 241 23 60 191 253 228 225 33 85 243 247 143 179 240 243 139 115 243 245 139 13 247 246 229 75 124 124 248 25 158 222 81 249 30 94 145 21 158 158 167 107 252 252 98 239 6 4 138 219 195 35 20 61 209 252 228 87 34 113 86 159 60 49 31 233 89 101 200 201 171 68 81 73 53 202 206 213 226 194 197 27 168 186 114 11 73 201 5 176 177 113 191 58 111 246 78 163 141 171 125 245 126 250 201 227 251 201 147 245 134 254 73 136 191 191 64 59 40 72 118 75 145 88 128 140 172 115 56 91 112 9 37 101 87 113 161 234 38 170 107 27 80 127 187 29 13 205 15 209 212 250 248 29 154 219 186 240 43 90 232 185 165 253 45 90 219 187 89 52 181 118 65 34 58 15 7 59 5 156 237 207 192 201 62 27 166 198 241 111 214 235 30 175 154 241 227 174 69 28 206 232 143 222 9 225 241 132 153 217 57 23 208 216 242 8 205 244 33 139 126 130 150 182 110 176 232 159 152 37 184 223 141 182 251 79 126 135 110 52 54 63 192 173 59 173 184 126 163 129 190 125 140 172 140 26 184 59 159 133 32 178 17 74 217 99 200 226 59 16 204 171 133 253 222 12 44 215 62 90 243 205 55 218 171 72 192 16 86 196 169 112 249 171 107 117 77 104 235 120 130 118 194 157 123 237 168 173 187 135 234 171 183 112 185 186 158 44 173 69 249 249 203 40 40 174 64 110 94 41 185 84 128 148 180 28 200 21 105 16 75 149 136 139 79 64 156 64 198 34 150 189 167 192 197 49 25 114 81 39 138 114 122 81 89 246 18 197 185 47 32 19 116 128 231 123 25 38 70 2 168 79 55 41 37 234 41 132 193 156 176 112 5 234 111 181 160 227 193 83 220 107 188 15 105 66 10 59 81 116 140 24 81 124 17 65 8 126 140 8 49 113 18 34 147 65 32 76 128 80 36 135 72 172 128 88 146 72 34 18 33 233 7 243 204 59 33 196 17 135 44 164 41 186 81 81 252 18 245 87 95 179 34 146 164 143 88 23 246 88 40 48 111 174 67 23 145 27 16 254 198 57 21 150 128 219 100 223 163 174 103 200 203 47 69 68 100 44 34 163 5 36 64 200 34 50 58 142 72 101 44 161 68 154 68 2 147 144 160 72 38 114 57 156 156 142 66 79 207 0 251 246 31 132 140 126 23 137 100 176 181 246 130 227 129 76 36 8 59 145 159 253 156 21 81 120 166 23 146 184 118 28 247 169 130 133 153 20 115 230 56 190 34 114 39 194 63 56 161 161 82 220 37 219 187 123 122 201 226 34 68 243 5 136 137 21 34 56 36 28 155 12 182 96 197 74 29 28 116 56 76 150 43 145 152 148 66 217 157 134 228 212 12 248 250 157 192 248 241 223 178 80 87 215 160 49 142 208 215 55 192 130 249 107 177 199 76 136 211 33 183 88 17 169 242 46 40 40 28 97 129 117 112 117 46 130 225 214 40 252 248 163 121 55 145 187 18 190 230 132 132 74 208 216 116 31 207 123 73 105 81 41 4 241 98 178 88 74 43 211 135 154 218 231 152 48 225 59 168 107 104 32 42 58 6 105 233 153 200 204 204 70 118 118 14 236 237 15 98 212 168 81 152 52 105 18 166 79 159 78 34 212 97 110 110 142 244 244 28 236 181 137 132 195 254 44 248 122 94 192 73 191 43 240 243 170 132 147 67 46 187 250 121 115 157 94 143 28 169 89 77 228 123 8 106 156 160 96 17 154 91 58 240 226 229 43 148 148 150 67 44 150 66 42 77 192 226 197 218 24 61 122 52 166 76 153 130 89 179 102 33 40 40 4 103 114 114 113 246 108 30 242 243 11 112 248 176 19 198 140 25 131 169 83 167 98 230 204 153 112 119 119 71 98 98 34 242 242 242 232 251 12 108 214 15 128 217 78 17 246 217 166 193 198 74 9 163 237 177 88 186 212 3 95 141 209 105 25 60 120 184 156 200 181 9 31 114 130 130 132 104 107 235 196 155 55 111 112 254 124 5 228 114 5 77 148 132 101 203 150 97 236 216 177 152 54 109 26 230 207 95 128 240 240 112 20 22 22 162 164 164 4 101 101 101 112 117 59 134 201 36 78 79 79 15 60 30 143 226 47 98 5 164 164 164 32 32 32 0 90 51 23 99 137 182 21 52 53 44 186 52 52 118 119 127 247 157 193 253 145 106 90 213 84 49 35 137 120 59 225 83 2 151 19 16 32 32 1 15 72 64 31 42 42 42 161 32 114 165 50 25 43 41 246 227 198 141 131 166 166 38 180 151 44 69 100 20 31 197 197 229 40 43 175 192 185 243 149 240 242 246 197 140 25 51 224 234 234 138 208 208 80 196 198 198 146 123 98 152 154 154 178 142 5 6 135 195 198 214 21 170 170 106 25 31 127 60 38 102 200 144 191 5 112 56 42 76 226 173 36 124 201 146 51 215 9 94 44 154 154 59 208 251 226 13 237 119 70 64 42 148 201 25 208 213 93 131 137 19 255 137 217 179 231 144 152 85 148 152 34 42 181 23 81 81 89 141 202 170 171 240 59 30 192 230 134 149 149 21 252 253 253 225 226 226 2 29 29 29 236 220 101 78 245 163 142 138 82 19 14 216 123 129 40 142 19 180 8 95 244 175 154 41 64 111 201 153 203 255 56 31 119 27 218 209 243 236 21 74 203 171 160 72 74 135 50 37 11 107 214 110 32 139 167 98 254 130 69 88 189 102 61 109 69 57 206 93 168 193 197 203 117 184 92 83 15 94 64 40 9 208 196 130 5 11 89 226 37 228 146 147 179 27 42 47 213 161 189 243 25 106 174 55 208 246 244 96 4 120 19 38 252 129 244 29 59 61 248 248 70 81 33 106 195 163 238 95 80 92 86 5 121 82 22 148 169 185 216 176 209 128 226 175 78 246 47 199 6 189 205 16 203 82 137 188 158 206 135 123 84 41 155 17 124 138 143 89 179 231 65 119 245 122 232 111 218 138 144 48 62 234 239 116 224 230 221 78 52 183 247 208 129 116 7 182 118 110 191 10 248 246 247 156 127 120 246 242 62 141 107 245 84 9 31 189 64 97 201 101 36 36 157 129 50 45 31 122 155 12 161 174 57 19 203 87 234 194 96 203 118 200 20 153 184 84 115 23 181 55 90 112 227 246 125 68 68 9 177 96 161 54 244 13 12 97 110 105 131 216 120 5 238 53 119 225 118 195 67 220 109 122 76 110 213 193 218 230 232 192 2 220 61 194 112 229 106 3 154 218 122 112 182 240 34 9 200 65 82 106 62 145 26 81 38 207 161 29 176 144 194 176 16 246 14 71 80 88 122 137 37 191 211 248 136 74 115 2 137 91 133 237 59 76 97 183 239 16 18 18 51 208 214 217 139 134 150 110 118 76 81 105 53 44 119 59 13 44 192 213 45 132 142 222 91 172 242 51 121 21 144 42 178 145 152 146 135 45 134 198 248 151 150 22 214 174 93 11 107 107 107 246 110 178 211 156 117 160 177 245 9 132 146 100 232 174 217 0 83 179 61 112 112 60 74 213 49 23 15 186 94 147 253 79 113 149 66 148 155 95 9 115 11 199 129 5 28 113 9 68 9 53 18 204 196 25 103 202 32 78 200 132 34 249 44 182 110 51 102 171 155 183 183 55 21 161 32 4 7 7 99 199 142 29 48 220 182 3 231 42 175 209 121 144 129 141 148 27 187 173 246 194 217 197 19 169 153 5 239 4 84 85 223 65 122 118 25 237 8 251 129 5 56 57 243 144 95 116 137 141 111 106 102 49 132 210 116 54 12 134 63 155 176 37 150 217 94 76 17 138 139 139 99 247 186 161 225 54 108 164 154 31 29 35 133 254 22 99 236 182 115 130 171 187 31 50 178 139 40 143 126 97 221 57 79 93 145 50 181 0 198 38 251 7 22 224 112 200 31 89 57 231 81 126 225 58 107 125 156 40 5 18 121 22 140 140 45 48 119 222 66 202 244 217 112 116 116 132 68 34 97 43 93 146 50 5 91 119 59 99 177 117 28 116 142 228 99 217 193 179 208 182 73 134 123 100 9 110 52 60 97 19 176 176 244 10 164 242 108 108 223 110 59 176 0 251 131 62 72 201 40 126 251 17 197 63 38 94 9 145 44 3 198 59 119 67 103 213 58 104 47 93 1 13 170 134 76 177 73 75 75 67 136 36 23 63 159 44 199 33 201 61 120 164 180 193 69 210 8 171 160 90 232 236 205 193 190 128 82 218 255 77 200 204 41 135 64 156 70 225 178 30 88 192 222 125 158 180 247 115 217 4 140 151 164 33 50 70 206 186 224 228 226 141 117 27 55 195 100 215 110 24 237 48 131 150 214 44 56 28 62 2 3 223 98 28 75 110 133 232 98 15 20 213 207 16 81 218 5 143 164 86 88 250 215 96 142 81 50 92 3 211 88 39 79 71 39 80 125 48 123 77 123 222 139 48 254 189 117 192 214 238 24 68 210 76 164 101 149 128 47 72 66 120 148 148 189 243 227 18 225 233 19 8 15 239 64 202 139 52 120 122 159 196 204 21 91 97 200 187 136 144 130 71 200 189 249 2 21 205 191 64 118 249 41 142 103 119 194 54 232 58 214 219 22 66 215 34 142 28 204 132 187 87 48 213 9 221 135 68 236 70 248 250 189 2 246 88 185 32 70 160 132 92 153 139 211 252 4 4 135 197 35 34 154 122 187 254 92 96 106 2 147 156 233 217 165 56 20 152 1 147 128 43 56 153 251 16 201 181 207 89 17 130 202 30 248 164 223 135 245 201 107 216 188 183 20 63 172 58 9 75 235 163 88 180 104 237 19 53 181 175 138 136 216 136 48 226 189 2 44 41 161 34 162 168 229 162 184 51 43 15 58 37 64 88 164 132 205 5 70 132 64 156 202 222 99 133 201 112 60 145 4 61 183 114 28 83 180 34 164 240 49 78 151 117 227 196 153 7 112 22 53 192 212 227 18 86 155 230 66 109 154 221 147 9 19 167 95 31 49 226 243 44 58 122 125 137 120 42 225 109 7 252 87 151 153 249 33 34 141 71 52 89 30 21 171 96 115 128 1 227 6 227 4 3 70 16 47 136 143 163 158 167 48 123 87 2 204 168 203 57 20 115 7 135 5 247 112 32 226 38 44 253 170 161 111 83 140 201 203 98 250 84 62 155 89 222 127 0 45 239 143 253 224 247 146 51 47 76 118 217 247 29 15 136 102 73 78 157 22 35 52 66 196 130 113 194 219 63 140 74 176 23 85 180 67 216 106 184 167 111 149 238 182 167 147 22 217 116 204 50 78 124 109 226 122 17 187 104 213 70 206 23 96 96 87 2 245 85 98 168 142 183 238 228 12 250 144 79 211 234 16 152 63 31 42 255 149 156 121 185 105 179 197 185 3 7 61 41 217 66 224 226 198 131 221 126 55 218 130 251 95 235 252 180 181 103 225 194 213 157 51 102 44 168 27 63 126 74 241 71 31 13 23 210 112 158 138 202 208 131 159 76 54 12 25 187 228 100 227 15 171 99 158 79 93 201 127 249 149 150 207 211 65 95 172 171 231 12 254 148 105 181 182 16 212 6 36 254 117 192 210 21 27 215 173 91 111 92 107 96 96 249 203 138 149 155 30 78 159 62 183 238 155 113 147 203 71 170 125 169 84 85 29 30 78 227 28 9 59 8 76 15 199 196 147 233 102 198 124 48 74 211 232 195 47 231 135 13 81 211 74 85 25 62 49 145 195 29 194 52 30 76 171 197 188 31 244 63 11 160 129 31 16 166 17 236 8 71 8 150 132 245 4 13 194 215 132 79 250 199 252 167 157 204 119 76 151 243 125 191 176 49 116 103 108 255 173 219 249 63 84 48 255 90 71 19 198 18 70 18 134 17 152 228 25 104 50 230 61 179 90 6 3 141 253 75 57 255 6 113 22 246 118 19 168 64 233 0 0 0 0 73 69 78 68 174 66 96 130]! !
!UMLBehaviorDescriptor class categoriesFor: #icon!constants!public! !

