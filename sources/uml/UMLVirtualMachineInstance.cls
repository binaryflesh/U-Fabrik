"Filed out from Dolphin Smalltalk 7"!

UMLInstance subclass: #UMLVirtualMachineInstance
	instanceVariableNames: 'smalltalkObject'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
UMLVirtualMachineInstance guid: (GUID fromString: '{97e42e58-eab5-43ac-bde0-29a855ae16fc}')!
UMLVirtualMachineInstance comment: 'This class represent all instances in the Virtual Machine environment.

Each instance of UMLClass is boxed inside this class.

Instances Variables:

smalltalkObject		- the smalltalk object that actually perform the behavior.
'!
!UMLVirtualMachineInstance categoriesForClass!Unclassified! !
!UMLVirtualMachineInstance methodsFor!

belongToVirtualMachine

	^true!

icon

	^smalltalkObject icon!

isBlock

	^smalltalkObject class == UMLBlockClosureNode!

isInitialized

	^self smalltalkClass ~~ UndefinedObject!

printName

	^'{', smalltalkObject printString,'}'!

printOn: target

	target 
		nextPutAll: smalltalkObject printString!

smalltalkClass

	^smalltalkObject class!

smalltalkObject
	^smalltalkObject!

smalltalkObject: anObject
	smalltalkObject := anObject!

treeForCollection
	| tree |

	tree := TreeModel withRoots: (OrderedCollection with: self).
	smalltalkObject do: [:each | tree add: each asChildOf: self].
	^tree!

virtualMachine

	virtualMachine ifNil: [virtualMachine := umlClass virtualMachine].

	^virtualMachine! !
!UMLVirtualMachineInstance categoriesFor: #belongToVirtualMachine!public! !
!UMLVirtualMachineInstance categoriesFor: #icon!public! !
!UMLVirtualMachineInstance categoriesFor: #isBlock!public! !
!UMLVirtualMachineInstance categoriesFor: #isInitialized!public! !
!UMLVirtualMachineInstance categoriesFor: #printName!public! !
!UMLVirtualMachineInstance categoriesFor: #printOn:!public! !
!UMLVirtualMachineInstance categoriesFor: #smalltalkClass!public! !
!UMLVirtualMachineInstance categoriesFor: #smalltalkObject!accessing!public! !
!UMLVirtualMachineInstance categoriesFor: #smalltalkObject:!accessing!private! !
!UMLVirtualMachineInstance categoriesFor: #treeForCollection!public! !
!UMLVirtualMachineInstance categoriesFor: #virtualMachine!public! !

!UMLVirtualMachineInstance class methodsFor!

icon
	"Generated from:
	self createIconMethodOfSize: 32@32 fromFile: 'vminstance.png'.
	"
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 32 0 0 0 32 8 6 0 0 0 115 122 122 244 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 32 99 72 82 77 0 0 122 38 0 0 128 132 0 0 250 0 0 0 128 232 0 0 117 48 0 0 234 96 0 0 58 152 0 0 23 112 156 186 81 60 0 0 0 9 112 72 89 115 0 0 3 175 0 0 3 175 1 24 30 177 125 0 0 7 113 73 68 65 84 88 71 173 86 9 80 212 117 20 254 45 139 160 130 33 35 89 162 105 229 100 151 147 101 78 86 99 77 199 116 204 116 91 118 88 150 2 11 172 224 114 44 2 130 10 166 149 134 166 121 37 30 104 167 205 116 72 211 49 83 78 90 113 236 205 46 203 46 44 44 151 129 128 113 45 151 187 43 180 95 239 247 95 118 227 90 202 200 153 29 150 193 223 251 190 247 190 247 190 247 68 108 130 255 76 89 44 160 171 129 45 240 19 179 27 69 46 182 32 192 197 142 46 62 206 90 39 24 118 252 231 197 18 182 88 17 201 242 117 242 144 202 242 29 55 246 215 158 120 0 205 63 174 68 105 198 85 208 196 248 233 181 209 44 132 71 40 138 96 11 117 17 44 252 127 39 83 28 197 50 58 212 241 192 165 227 195 62 166 13 161 104 63 24 14 181 68 164 84 74 216 163 134 180 25 54 205 186 41 86 101 20 155 51 33 18 103 179 152 255 208 0 138 40 246 145 163 233 221 97 224 174 190 195 48 164 134 194 146 17 132 138 180 169 48 164 133 193 89 149 142 94 85 12 38 68 66 17 205 210 85 209 34 33 11 253 27 108 58 149 254 45 195 198 240 30 56 243 134 87 192 113 20 232 253 0 142 186 108 52 157 122 10 78 107 6 208 180 13 248 61 27 189 69 107 160 137 159 124 249 149 224 224 213 185 247 160 199 146 9 141 44 168 78 159 30 118 161 173 40 6 163 192 157 199 128 190 67 64 247 126 160 99 55 240 7 85 167 249 109 160 97 11 80 191 17 168 78 67 67 222 61 160 36 44 37 107 216 149 255 74 14 15 56 28 20 156 180 118 52 231 224 207 30 2 25 161 187 64 230 226 97 2 63 0 116 238 1 90 119 2 45 239 0 141 111 18 248 38 160 102 3 218 242 159 64 153 60 16 245 91 131 161 146 136 140 158 38 245 73 100 36 248 72 80 151 253 8 90 11 36 168 218 191 24 166 77 87 193 148 30 2 243 150 57 104 56 249 8 6 206 101 3 231 183 2 231 54 3 181 25 176 43 35 97 72 152 132 150 157 211 209 156 19 130 218 172 169 80 69 49 165 65 206 130 198 36 64 221 155 194 203 238 201 124 36 120 155 66 138 178 204 43 209 176 125 6 122 142 93 3 251 71 215 162 239 196 92 250 62 7 141 219 67 133 191 245 87 166 2 117 153 128 149 126 150 39 162 84 30 44 128 159 223 62 13 181 217 68 32 90 100 241 89 5 95 4 120 214 53 199 150 161 38 59 4 246 143 175 131 227 147 235 8 124 158 0 222 75 224 221 71 194 97 203 157 37 144 168 221 127 187 160 59 44 114 192 44 67 213 142 249 48 175 15 64 105 162 63 212 209 34 151 50 134 221 50 110 31 208 156 31 108 57 253 154 87 111 14 94 181 239 14 52 191 55 19 151 78 206 31 6 110 203 13 39 109 67 80 150 28 248 103 73 188 184 81 47 243 239 209 198 5 18 120 50 101 159 0 24 215 162 239 244 114 116 229 63 134 222 111 31 135 38 86 196 155 241 164 79 2 84 154 73 218 132 160 202 75 237 239 123 9 8 78 183 139 192 63 27 2 126 252 26 1 88 29 43 50 211 104 174 225 35 202 131 242 247 148 192 247 78 117 20 80 22 7 232 105 106 180 17 128 114 21 186 190 124 8 101 73 98 24 19 252 160 144 176 132 49 73 144 201 72 154 190 91 225 5 239 212 37 192 186 249 138 97 224 221 71 102 195 152 28 232 164 76 214 143 52 41 30 84 69 54 221 175 33 2 134 88 64 23 9 168 94 7 138 87 162 229 200 98 148 167 136 97 205 16 67 39 101 151 232 253 125 2 9 85 52 91 226 245 246 156 155 251 7 186 15 10 4 92 52 130 101 155 103 9 141 230 209 188 235 240 108 232 215 249 219 104 82 150 249 42 99 73 98 208 57 148 74 129 18 34 161 126 3 80 188 10 20 188 136 250 156 249 176 164 250 161 42 93 4 179 156 129 146 221 39 196 160 47 27 59 52 178 81 51 222 161 149 161 126 219 116 47 56 111 182 210 132 128 94 42 223 82 95 224 148 213 221 181 187 111 38 112 9 160 89 67 224 212 75 133 47 1 191 44 71 121 70 24 42 211 68 244 97 40 75 100 40 142 100 81 66 28 122 244 177 163 37 103 20 129 154 188 251 168 179 103 187 187 253 248 92 84 109 12 230 13 244 202 120 29 172 140 18 125 211 119 250 121 175 238 109 159 220 11 83 90 40 74 226 253 161 143 103 2 56 255 24 232 59 223 170 66 44 117 124 160 110 148 189 146 4 230 183 231 227 226 135 110 240 214 189 51 193 101 26 15 156 12 230 201 154 157 11 188 186 187 10 95 134 33 41 8 214 13 98 161 236 30 112 254 83 67 61 80 181 142 5 50 128 137 140 111 206 235 25 101 177 156 192 54 50 25 234 118 110 50 229 169 83 168 227 217 66 95 4 20 49 236 6 131 60 164 109 64 177 202 173 123 241 171 104 58 180 136 74 45 26 5 94 158 194 104 101 51 189 16 139 14 134 121 214 15 238 130 189 113 59 58 245 201 224 51 239 33 99 217 179 8 182 67 179 4 131 33 247 82 251 2 167 204 23 232 100 83 27 46 254 76 211 163 89 237 213 93 159 56 149 154 238 239 204 117 107 217 0 253 223 2 170 228 81 146 242 25 183 254 49 108 17 253 50 80 153 25 12 147 124 50 122 173 228 225 194 194 201 67 235 175 17 168 201 154 134 11 187 195 120 249 247 143 69 128 70 110 133 97 125 104 135 253 236 139 94 221 81 244 50 240 235 243 232 251 250 65 232 101 1 176 172 103 66 215 19 206 231 99 38 65 127 120 193 152 60 217 209 184 99 6 154 126 160 142 229 4 236 180 223 123 14 160 114 215 173 116 96 76 225 35 243 158 231 49 159 125 234 224 199 85 209 126 63 213 237 93 136 1 53 25 141 103 222 139 94 1 126 163 74 156 121 22 142 83 15 194 144 56 25 21 68 64 27 203 156 188 82 62 123 136 188 224 126 237 90 113 167 101 207 109 238 69 196 247 123 215 62 184 104 189 54 125 245 4 191 247 186 9 176 80 29 43 46 54 110 152 217 245 123 238 18 56 138 200 96 248 188 235 6 231 157 116 231 243 142 179 207 193 145 255 144 27 156 244 230 4 84 18 86 63 238 45 192 103 219 144 121 181 205 121 129 246 121 95 238 224 113 193 247 59 141 39 63 46 26 249 113 65 251 189 58 29 168 228 75 198 237 243 238 121 95 13 251 143 207 184 193 105 222 29 223 60 236 5 247 116 254 160 4 198 49 215 112 97 4 155 166 150 6 116 58 233 232 16 142 11 42 61 58 105 23 180 13 30 23 158 253 78 199 5 170 82 132 21 235 246 249 104 244 23 174 68 253 238 155 160 149 250 161 250 173 185 176 231 143 6 231 36 74 101 130 243 125 138 44 230 55 246 14 136 100 82 235 161 165 46 225 178 177 237 5 218 119 161 253 204 42 216 10 86 195 85 71 103 21 29 23 194 126 175 72 34 112 186 136 13 49 104 255 226 97 193 96 204 114 247 168 113 16 13 17 225 101 31 58 243 94 240 21 76 60 158 143 48 234 116 169 245 224 18 23 207 252 194 183 203 97 76 10 64 69 106 32 93 52 129 104 60 177 204 189 98 77 235 72 119 190 100 162 80 71 153 87 144 183 87 14 53 153 84 6 83 210 223 4 254 53 184 135 25 39 81 182 101 174 139 131 243 43 166 233 221 43 80 189 105 10 206 127 72 4 232 184 240 234 78 102 83 78 231 216 208 76 57 176 38 134 117 81 183 159 226 182 123 217 224 30 18 52 150 175 235 226 196 61 231 182 6 225 252 59 193 52 134 1 168 63 112 59 26 143 45 69 117 206 13 48 209 82 41 137 159 52 204 219 245 113 164 113 36 203 161 123 32 140 199 161 155 96 27 197 201 195 63 149 221 151 38 106 41 187 158 70 167 192 156 50 137 55 88 47 5 207 164 128 53 102 185 31 237 115 94 246 225 58 147 77 219 198 213 247 191 252 145 179 39 96 25 1 223 201 223 171 226 216 12 42 239 25 35 173 210 161 165 231 77 71 100 21 255 5 227 178 223 240 147 75 25 201 14 104 165 131 122 19 48 47 53 249 200 211 151 29 108 34 15 84 107 217 213 124 147 78 36 6 127 251 23 196 194 200 20 11 236 95 198 0 0 0 0 73 69 78 68 174 66 96 130]!

umlClass: anUMLVirtualMachineClass

	^(super umlClass: anUMLVirtualMachineClass)
		smalltalkObject: anUMLVirtualMachineClass newSmalltalkObject;
		yourself.!

umlClass: anUMLVirtualMachineClass with: smalltalkObject

	^(super umlClass: anUMLVirtualMachineClass)
		smalltalkObject: smalltalkObject;
		yourself.! !
!UMLVirtualMachineInstance class categoriesFor: #icon!constants!public! !
!UMLVirtualMachineInstance class categoriesFor: #umlClass:!public! !
!UMLVirtualMachineInstance class categoriesFor: #umlClass:with:!public! !

