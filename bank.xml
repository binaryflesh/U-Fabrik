<Implementations><UMLModelNamed>bank.xmi</UMLModelNamed><UMLClass><Name>Person</Name><Implementations><Implementation><Source><![CDATA[banks

	^Bank allGlobalObjects]]></Source><Categories><CategoryName>GUI - Collection Tabs</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[printObjectName
	^name]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[name

	^name]]></Source><Categories><CategoryName>GUI - Object Header</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[initialize

super initialize.
password := ''.
surname := ''.
email := ''.
phone := ''.
name := ''.
account := OrderedCollection new.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[isAdmin: loggedUser
	^loggedUser name = 'admin']]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>TransactionTax</Name><Implementations><Implementation><Source><![CDATA[initialize
	super initialize.
	taxPercentage := 0.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>DebitCard</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>CardTransaction</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
card := Card new.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>Transaction</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
id := ''.
amount := 0.
executed := false.
executionStamp := TimeStamp new.
scheduledExecution := TimeStamp new.
account := Account new.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>CheckingAccount</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>StateDefinition</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
name := ''.
isInitial := false.
isFinal := false.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>CreditCard</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>Card</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
issuerCompany := ''.
holderSurname := ''.
number := ''.
holderName := ''.
backCode := 0.
expirationDate := Date new.
account := Account new.
cardTransaction := OrderedCollection new.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>TransactionRule</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
grantedAmount := 0.
person := Person newFromTransactionRule: self.
account := Account new.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>Currency</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
code := ''.
name := ''.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[printObjectName

	^code]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>ForeignTransaction</Name><Implementations><Implementation><Source><![CDATA[currentState
	"Answer the receiver is the final transition" 

	^stateDefinition]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[initialize

super initialize.
stateDefinition := StateDefinition newFromForeignTransaction: self.
stateMachineDefinition := StateMachineDefinition newFromForeignTransaction: self.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[startStateMachineNamed: aString
	"The receiver start to aStateMachine named <aString> by setting the current state with the initial state" 
	| stateMachine |

	stateMachine := (StateMachineDefinition getGlobalObjectSatisfying: [:each | each name = aString]) last.
	stateDefinition := stateMachine getInitialState.]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[possibleNextTransitions
	"The receiver answer the next possible transitions based on the current state" 

	^stateMachineDefinition possibleNextTransitionsFrom: self currentState.]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[goToNextState
	"The receiver go to the next state based on its own rules"]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[setStateMachineNamed: aString
	"The receiver start to aStateMachine named <aString> by setting the current state with the initial state" 

	stateMachineDefinition := (StateMachineDefinition getGlobalObjectSatisfying: [:each | each name = aString]) last.]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>SavingAccount</Name><Implementations><Implementation><Source><![CDATA[number
	^number]]></Source><Categories><CategoryName>GUI - Object Header</CategoryName><CategoryName>GUI - Collection Aspects</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[currencyCode
	^currency code]]></Source><Categories><CategoryName>GUI - Object Header</CategoryName><CategoryName>GUI - Collection Aspects</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[bankName

	^bank name]]></Source><Categories><CategoryName>GUI - Collection Aspects</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[name
	^name]]></Source><Categories><CategoryName>GUI - Collection Aspects</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[initialize

super initialize.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[code
	^code]]></Source><Categories><CategoryName>GUI - Collection Aspects</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>StateMachineDefinition</Name><Implementations><Implementation><Source><![CDATA[getStartTransition
	"The receiver answer the start transition of the State Machine"

	^self in: TransitionDefinition detect: [:each | each isInitial]]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[getFinalTransitions
	"The receiver answer a collection of final transitions of the State Machine"

	^self in: TransitionDefinition select: [:each | each isFinal]]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[possibleNextTransitionsFrom: aState
	"The receiver answer a collection of possibles next transitions from <aState>"

	^self in: TransitionDefinition detect: [:each | each start == aState]]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[getAllStates
	"The receiver answer a collection of all states of the State Machine"
	| states |

	states := OrderedCollection new.
	self in: TransitionDefinition do: [:each | states add: each start.
		states add: each end].
	^states copyWithoutDuplicates]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[initialize

super initialize.
name := ''.
transitionDefinition := OrderedCollection new.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[getInitialState
	"The receiver answer the initial state of the State Machine"

	^self getStartTransition end]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>AccountTransaction</Name><Implementations><Implementation><Source><![CDATA[initialize

super initialize.
account := Account newFromAccountTransaction: self.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>Bank</Name><Implementations><Implementation><Source><![CDATA[name

	^name]]></Source><Categories><CategoryName>GUI - Object Header</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[initialize

super initialize.
name := ''.
account := OrderedCollection new.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[printObjectName

	^name]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>Account</Name><Implementations><Implementation><Source><![CDATA[initialize
	super initialize.
	code := ''.
	name := ''.
	number := 0.
	currency := Currency usd.
	transaction := OrderedCollection new.
	transactionRule := OrderedCollection new.
	person := OrderedCollection new.
	card := OrderedCollection new]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[currencyCode
	^currency code]]></Source><Categories><CategoryName>GUI - Object Header</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[number

	^number]]></Source><Categories><CategoryName>GUI - Object Header</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass><UMLClass><Name>TransitionDefinition</Name><Implementations><Implementation><Source><![CDATA[start
	^stateDefinition]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[end: anObject
	next := anObject]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[start: anObject
	stateDefinition := anObject]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[initialize

super initialize.
name := ''.
stateDefinition := StateDefinition newFromTransitionDefinition: self.
next := StateDefinition newFromTransitionDefinition: self.
stateMachineDefinition := OrderedCollection new.
]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[end
	^next]]></Source><Categories></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[isInitial
	"Answer the receiver is the initial transition"

	^stateDefinition isInitial or: [next isInitial]]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation><Implementation><Source><![CDATA[isFinal
	"Answer the receiver is the final transition"

	^stateDefinition isFinal or: [next isFinal]]]></Source><Categories><CategoryName>state machine</CategoryName></Categories><Comments><![CDATA[]]></Comments></Implementation></Implementations></UMLClass></Implementations>